pipeline {
  agent any

  environment {
    ANDROID_HOME     = "/opt/android-sdk"
    PATH             = "$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/emulator:$PATH"
    GRADLE_OPTS      = "-Dorg.gradle.jvmargs=-Xmx4g"
    GRADLE_USER_HOME = "/var/jenkins_home/.gradle"
    HOME             = "/var/jenkins_home"
    ADB_VENDOR_KEYS  = "$HOME/.android/adbkey"
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Setup local.properties') {
      steps {
        sh 'echo "sdk.dir=$ANDROID_HOME" > local.properties'
      }
    }

    stage('Ensure AVD Exists') {
      steps {
        sh '''
          echo "üì¶ Ensuring AVD exists..."
          if ! $ANDROID_HOME/emulator/emulator -list-avds | grep -q jenkins_emulator; then
            echo "üõ† Creating AVD..."
            echo "no" | avdmanager create avd -n jenkins_emulator \
              -k "system-images;android-33;google_apis;x86_64" \
              --device "pixel" --force
          else
            echo "‚úÖ AVD already exists"
          fi
        '''
      }
    }

    stage('Start Emulator') {
      steps {
        sh '''
          echo "üöÄ Starting emulator with GPU acceleration..."

          mkdir -p $HOME/.android
          rm -f $HOME/.android/adbkey*
          touch $HOME/.android/adbkey $HOME/.android/adbkey.pub

          start=$(date +%s)

          nohup $ANDROID_HOME/emulator/emulator -avd jenkins_emulator \
            -no-audio -no-snapshot -wipe-data -gpu host \
            -no-boot-anim -no-window -accel on > "$WORKSPACE/emulator.log" 2>&1 &

          echo "üîç Waiting for emulator to appear in adb..."
          for i in {1..30}; do
            if adb devices | awk '/emulator-.*device\$/' {print $1}; then
              break
            fi
            sleep 2
          done

          echo "‚è≥ Waiting for boot completion (max 180s)..."
          for i in {1..36}; do
            if adb -s emulator-5554 shell getprop sys.boot_completed | grep -q 1; then
              end=$(date +%s)
              echo "‚úÖ Emulator booted in $((end - start)) seconds"
              break
            fi
            sleep 5
          done

          echo "üîì Unlocking screen..."
          adb -s emulator-5554 shell input keyevent 82
          sleep 5

          adb shell settings put global window_animation_scale 0
          adb shell settings put global transition_animation_scale 0
          adb shell settings put global animator_duration_scale 0
        '''
      }
    }

    stage('Build APK') {
      steps {
        sh './gradlew assembleDebug'
      }
    }

    stage('Run Instrumented UI Tests') {
      steps {
        sh '''
          export ANDROID_SERIAL=emulator-5554
          echo "üß™ Running UI Tests..."
          ./gradlew connectedDebugAndroidTest
        '''
      }
    }

    stage('Archive Test Results') {
      steps {
        sh 'echo "üìÇ Listing test result files..."; find . -name "*.xml" || true'
        junit '**/build/outputs/**/connected/**/*.xml'
        archiveArtifacts artifacts: '**/build/outputs/**/*.apk', fingerprint: true
        archiveArtifacts artifacts: 'emulator.log', allowEmptyArchive: true
      }
    }
  }

  post {
    always {
      echo "üõë Stopping emulator..."
      sh '''
        adb -s emulator-5554 emu kill || true
        pkill -f "emulator.*jenkins_emulator" || true
        pkill -f "qemu-system-x86_64" || true
      '''
    }
    success {
      echo "‚úÖ Build and tests completed successfully"
    }
    failure {
      echo "‚ùå Build or tests failed"
      sh 'echo "üìÑ Dumping emulator log:"; cat "$WORKSPACE/emulator.log" || true'
    }
  }
}
