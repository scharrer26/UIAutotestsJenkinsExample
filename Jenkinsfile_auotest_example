pipeline {
    agent any

    environment {
        ANDROID_HOME = "/opt/android-sdk"
        PATH = "$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/emulator:$PATH"
        GRADLE_OPTS = "-Dorg.gradle.jvmargs=-Xmx4g"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Setup local.properties') {
            steps {
                sh 'echo "sdk.dir=$ANDROID_HOME" > local.properties'
            }
        }

        stage('Start Emulator') {
            steps {
                sh '''
                    nohup emulator -avd jenkins_emulator -no-window -no-audio -no-snapshot -wipe-data -gpu off -accel off &
                    
                    echo "⏳ Waiting for emulator to connect via ADB..."
                    adb wait-for-device
                    
                    boot_completed=""
                    while [ "$boot_completed" != "1" ]; do
                        sleep 5
                        boot_completed=$(adb shell getprop sys.boot_completed | tr -d '\\r')
                        echo "⏳ Emulator booting..."
                    done
                    
                    echo "✅ Emulator is fully booted and ready!"
                '''
            }
        }

        stage('Build APK') {
            steps {
                sh './gradlew assembleDebug'
            }
        }

        stage('Run Instrumented UI Tests') {
            steps {
                sh './gradlew connectedDebugAndroidTest'
            }
        }

        stage('Archive Test Results') {
            steps {
                junit '**/build/outputs/androidTest-results/connected/*.xml'
            }
        }
    }

    post {
        success {
            echo "✅ Build und UI-Tests erfolgreich"
        }
        failure {
            echo "❌ Build oder Tests fehlgeschlagen"
        }
        always {
            archiveArtifacts artifacts: '**/build/outputs/**/*.apk', fingerprint: true
        }
    }
}
