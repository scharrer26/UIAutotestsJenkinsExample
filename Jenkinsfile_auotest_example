pipeline {
  agent any

  environment {
    ANDROID_HOME    = "/opt/android-sdk"
    PATH            = "$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/emulator:$PATH"
    GRADLE_OPTS     = "-Dorg.gradle.jvmargs=-Xmx4g"
    HOME            = "/var/jenkins_home"
    ADB_VENDOR_KEYS = "/var/jenkins_home/.android/adbkey"
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Setup local.properties') {
      steps {
        sh 'echo "sdk.dir=$ANDROID_HOME" > local.properties'
      }
    }

    stage('Start Emulator') {
      steps {
        sh '''
          echo "üöÄ Starting emulator in Xvfb..."
          mkdir -p $HOME/.android
          rm -f $HOME/.android/adbkey* 
          touch $HOME/.android/adbkey $HOME/.android/adbkey.pub

          # 1) Emulator headless unter Xvfb starten
          nohup xvfb-run --auto-servernum --server-args="-screen 0 1280x1024x24" \
            $ANDROID_HOME/emulator/emulator -avd jenkins_emulator \
            -no-audio -no-snapshot -wipe-data \
            -gpu swiftshader_indirect -accel off -no-boot-anim \
            > emulator.log 2>&1 &

          # 2) Auf Android Device warten
          echo "üîç Waiting for emulator to appear..."
          for i in {1..30}; do
            adb devices | awk '/emulator-.*device$/ {print $1}' && break
            sleep 2
          done

          # 3) Auf Boot warten
          echo "‚è≥ Waiting for boot completion (max 180s)..."
          for i in {1..36}; do
            if adb -s emulator-5554 shell getprop sys.boot_completed | grep -q 1; then
              echo "‚úÖ Emulator booted"
              break
            fi
            sleep 5
          done

          # 4) Espresso-freundlich: Animationen ausschalten
          echo "üö´ Disabling animations for Espresso..."
          adb -s emulator-5554 shell settings put global window_animation_scale 0
          adb -s emulator-5554 shell settings put global transition_animation_scale 0
          adb -s emulator-5554 shell settings put global animator_duration_scale 0

          # 5) Wecken & entsperren
          echo "üîì Unlocking screen..."
          adb -s emulator-5554 shell input keyevent 224       # KEYCODE_WAKEUP
          adb -s emulator-5554 shell wm dismiss-keyguard     # Keyguard entfernen
          adb -s emulator-5554 shell input keyevent 82        # KEYCODE_MENU/HOME
          sleep 2

          # 6) Verifizieren, dass unsere Activity Fokus hat
          echo "üîç Verifying focus‚Ä¶"
          adb -s emulator-5554 shell dumpsys window windows \
            | grep -E "mCurrentFocus|has-window-focus=true"
        '''
      }
    }

    stage('Build APK') {
      steps {
        sh './gradlew assembleDebug'
      }
    }

    stage('Run Instrumented UI Tests') {
      steps {
        sh '''
          export ANDROID_SERIAL=emulator-5554
          echo "üß™ Running Espresso/UI Tests..."
          ./gradlew connectedDebugAndroidTest
        '''
      }
    }

    stage('Archive Test Results') {
      steps {
        sh 'echo "üìÇ Searching for test XML files..."; find . -name "*.xml" || true'
        junit '**/build/outputs/**/connected/**/*.xml'
      }
    }
  }

  post {
    always {
      echo "üõë Stopping emulator"
      sh '''
        adb -s emulator-5554 emu kill || true
        pkill -f "emulator.*jenkins_emulator" || true
        pkill -f "qemu-system-x86_64" || true
      '''
    }
    success {
      echo "‚úÖ Build and UI tests successful"
    }
    failure {
      echo "‚ùå Build or tests failed"
    }
  }
}
